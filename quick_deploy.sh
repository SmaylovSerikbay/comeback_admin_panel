#!/bin/bash

# –ë—ã—Å—Ç—Ä—ã–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Comeback Admin Panel –Ω–∞ VDS
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —à–∞–≥–∏

set -e

echo "üöÄ –ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Comeback Admin Panel –Ω–∞ VDS..."
echo "IP: 89.39.95.190"
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã root
if [[ $EUID -ne 0 ]]; then
   error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç root –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ curl
if ! command -v curl &> /dev/null; then
    log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º curl..."
    apt update -y
    apt install -y curl wget git unzip
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
if ! command -v docker &> /dev/null; then
    log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    rm get-docker.sh
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Docker
    systemctl start docker
    systemctl enable docker
    
    log "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
else
    log "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose
if ! command -v docker-compose &> /dev/null; then
    log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
    curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    log "Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    log "Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ö–ª–æ–Ω–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç
if [ ! -d "comeback_admin_panel" ]; then
    log "–ö–ª–æ–Ω–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç..."
    git clone https://github.com/SmaylovSerikbay/comeback_admin_panel.git
    cd comeback_admin_panel
else
    log "–ü—Ä–æ–µ–∫—Ç —É–∂–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é..."
    cd comeback_admin_panel
fi

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
log "–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
mkdir -p nginx/ssl nginx/www media staticfiles

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
chown -R $USER:$USER nginx/ media/ staticfiles/

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
if [ ! -f ".env" ]; then
    log "–°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª..."
    if [ -f "env.production" ]; then
        cp env.production .env
        warning "–§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏–∑ env.production. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Firebase credentials!"
    else
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª
        cat > .env << EOF
# Django Settings
DEBUG=False
SECRET_KEY=$(python3 -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())")
ALLOWED_HOSTS=89.39.95.190,localhost,127.0.0.1

# Database
POSTGRES_DB=comeback_admin
POSTGRES_USER=comeback_user
POSTGRES_PASSWORD=comeback_password_2025
POSTGRES_HOST=db
POSTGRES_PORT=5432

# Redis
REDIS_URL=redis://redis:6379/0

# Security
SECURE_SSL_REDIRECT=True

# Firebase Configuration - –ù–ê–°–¢–†–û–ô–¢–ï –≠–¢–ò –ó–ù–ê–ß–ï–ù–ò–Ø!
FIREBASE_TYPE=service_account
FIREBASE_PROJECT_ID=comeback-2a6b2
FIREBASE_PRIVATE_KEY_ID=your_private_key_id
FIREBASE_PRIVATE_KEY=your_private_key
FIREBASE_CLIENT_EMAIL=your_client_email
FIREBASE_CLIENT_ID=your_client_id
FIREBASE_CLIENT_CERT_URL=your_client_cert_url
FIREBASE_DATABASE_URL=https://comeback-2a6b2-default-rtdb.firebaseio.com/
FIREBASE_STORAGE_BUCKET=comeback-2a6b2.firebasestorage.app
EOF
        warning "–°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Firebase credentials!"
    fi
else
    log ".env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down -v 2>/dev/null || true

# –û—á–∏—â–∞–µ–º Docker
log "–û—á–∏—â–∞–µ–º Docker..."
docker system prune -f

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
log "–ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
docker-compose up -d --build

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
log "–ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sleep 45

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
log "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose ps

# –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
log "–°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
docker-compose exec -T web python manage.py createsuperuser --noinput || warning "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
sleep 10

if curl -s http://localhost > /dev/null; then
    log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!"
else
    warning "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–æ, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs -f"
fi

echo ""
echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üì± –í–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å–∞–º:"
echo "   HTTP:  http://89.39.95.190"
echo "   HTTPS: https://89.39.95.190"
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose logs -f"
echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart"
echo "   –°—Ç–∞—Ç—É—Å: docker-compose ps"
echo ""
echo "‚ö†Ô∏è  –í–ê–ñ–ù–´–ï –ù–ê–ü–û–ú–ò–ù–ê–ù–ò–Ø:"
echo "   1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Firebase credentials –≤ .env —Ñ–∞–π–ª–µ"
echo "   2. –ò–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª–∏ –≤ .env —Ñ–∞–π–ª–µ"
echo "   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
echo ""
echo "üìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: DEPLOYMENT.md"
echo ""
