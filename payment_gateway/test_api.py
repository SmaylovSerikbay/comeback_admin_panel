#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —à–ª—é–∑–∞
"""

import requests
import json
import time

# –ë–∞–∑–æ–≤—ã–π URL
BASE_URL = "https://comeback.uz/payment-gateway"

def test_unity_create_payment():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ Unity API"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ Unity...")
    
    url = f"{BASE_URL}/api/unity/create-payment/"
    data = {
        "unity_user_id": "test_user_123",
        "amount": 1000,
        "description": "Test Unity Payment"
    }
    
    try:
        response = requests.post(url, json=data, headers={
            'Content-Type': 'application/json'
        })
        
        print(f"üì° –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üì® –û—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print("‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
                print(f"   Order ID: {result.get('order_id')}")
                print(f"   Session ID: {result.get('session_id')}")
                print(f"   Payment URL: {result.get('payment_url')}")
                return result.get('order_id')
            else:
                print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞")
                print(f"   –û—à–∏–±–∫–∞: {result.get('error')}")
        else:
            print("‚ùå HTTP –æ—à–∏–±–∫–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    return None

def test_unity_check_status(order_id):
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞"""
    if not order_id:
        print("‚ùå Order ID –Ω–µ —É–∫–∞–∑–∞–Ω")
        return
    
    print(f"üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è {order_id}...")
    
    url = f"{BASE_URL}/api/unity/check-status/"
    params = {"order_id": order_id}
    
    try:
        response = requests.get(url, params=params)
        
        print(f"üì° –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üì® –û—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print("‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω!")
                print(f"   –°—Ç–∞—Ç—É—Å: {result.get('status')}")
                print(f"   –°—É–º–º–∞: {result.get('amount')} {result.get('currency')}")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞")
                print(f"   –û—à–∏–±–∫–∞: {result.get('error')}")
        else:
            print("‚ùå HTTP –æ—à–∏–±–∫–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def test_freedompay_callbacks():
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ callback endpoints"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FreedomPay callback endpoints...")
    
    endpoints = [
        "/freedompay/check/",
        "/freedompay/result/",
        "/freedompay/success/",
        "/freedompay/fail/"
    ]
    
    for endpoint in endpoints:
        url = f"{BASE_URL}{endpoint}"
        try:
            response = requests.get(url)
            print(f"‚úÖ {endpoint}: {response.status_code}")
        except Exception as e:
            print(f"‚ùå {endpoint}: {e}")

def test_admin_endpoints():
    """–¢–µ—Å—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö endpoints"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö endpoints...")
    
    endpoints = [
        "/dashboard/",
        "/test/",
        "/api-docs/"
    ]
    
    for endpoint in endpoints:
        url = f"{BASE_URL}{endpoint}"
        try:
            response = requests.get(url)
            print(f"‚úÖ {endpoint}: {response.status_code}")
        except Exception as e:
            print(f"‚ùå {endpoint}: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Payment Gateway API")
    print("=" * 50)
    
    # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
    order_id = test_unity_create_payment()
    
    if order_id:
        print("\n" + "=" * 50)
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—Ç–∞—Ç—É—Å–∞
        time.sleep(2)
        
        # –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
        test_unity_check_status(order_id)
    
    print("\n" + "=" * 50)
    
    # –¢–µ—Å—Ç callback endpoints
    test_freedompay_callbacks()
    
    print("\n" + "=" * 50)
    
    # –¢–µ—Å—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö endpoints
    test_admin_endpoints()
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()
